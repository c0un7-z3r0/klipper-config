# This file contains common pin mappings for RAMPS (v1.3 and later)
# boards. RAMPS boards typically use a firmware compiled for the AVR
# atmega2560 (though other AVR chips are also possible).

# See the example.cfg file for a description of available parameters.

[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
step_distance: .005
endstop_pin: tmc2130_stepper_x:virtual_endstop
position_endstop: 0
position_max: 200
homing_speed: 50
homing_positive_dir: false

[tmc2130 stepper_x]
cs_pin: PE4
microsteps: 16
run_current: .5
sense_resistor: 0.110
diag1_pin: !PE5
interpolate: True
#stealthchop_threshold: 50
driver_SGT: 3
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 30
#driver_BLANK_TIME_SELECT: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_AUTOSCALE: True
driver_PWM_FREQ: 2
driver_PWM_GRAD: 2
driver_PWM_AMPL: 230

[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
step_distance: .005
endstop_pin: tmc2130_stepper_y:virtual_endstop
position_endstop: 0
position_max: 200
homing_speed: 50

[tmc2130 stepper_y]
cs_pin: PJ0
microsteps: 16
run_current: .5
sense_resistor: 0.110
diag1_pin: !PJ1
interpolate: True
#stealthchop_threshold: 50
driver_SGT: 3
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 30
#driver_BLANK_TIME_SELECT: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 5
driver_PWM_AUTOSCALE: True
driver_PWM_FREQ: 2
driver_PWM_GRAD: 2
driver_PWM_AMPL: 230

[tmc2130 extruder]
cs_pin: PL7
microsteps: 16
run_current: .5
sense_resistor: 0.220

[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
step_distance: .0025
endstop_pin: probe:z_virtual_endstop
#endstop_pin: ^ar19
position_endstop: 0.5
position_max: 200

[stepper_z1]
step_pin: PC1
dir_pin: PC3
enable_pin: !PC7
step_distance: .0025

[extruder]
step_pin: PA4
dir_pin: !PA6
enable_pin: !PA2
step_distance: .002
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK5
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
#control: watermark
min_temp: 0
max_temp: 130

[fan]
pin: PH6

[mcu]
serial: /dev/ttyUSB0
pin_map: arduino

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

# "RepRapDiscount 2004 Smart Controller" type displays
#[display]
#lcd_type: hd44780
#rs_pin: ar16
#e_pin: ar17
#d4_pin: ar23
#d5_pin: ar25
#d6_pin: ar27
#d7_pin: ar29

# "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
[display]
lcd_type: st7920
cs_pin: PH1
sclk_pin: PA1
sid_pin: PH0

# Define the BLTouch servo
[servo bltouch]
pin: PB5
maximum_servo_angle: 180
minimum_pulse_width: 0.0006
maximum_pulse_width: 0.0024

# Define a probe using the BLTouch
[probe]
pin: PD3
z_offset: 2.345
activate_gcode:
    SET_SERVO SERVO=bltouch ANGLE=10
    SET_SERVO SERVO=bltouch ANGLE=60
    G4 P200
deactivate_gcode:
    SET_SERVO SERVO=bltouch ANGLE=90
    G4 P100

# If the BLTouch is used to home the Z axis, then define a
# homing_override section, use probe:z_virtual_endstop as the
# endstop_pin in the stepper_z section, and set the endstop_position
# in the stepper_z section to match the probe's z_offset.
[homing_override]
set_position_z: 5
axes: z
gcode:
    G90   ; Uncomment these 2 lines to blindly lift the Z 2mm at start
    G1 Z7 F600
    G28 X0 Y0
    G1 X100 Y100 F3600
    G28 Z0

## Mesh Bed Leveling. One may define a [bed_mesh] config section
# to enable move transformations that offset the z axis based
# on a mesh generated from probed points. Note that bed_mesh
# and bed_tilt are incompatible, both cannot be defined.
[bed_mesh]
speed: 100
min_point: 11,1
max_point: 215,193

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.874
#*# pid_ki = 1.782
#*# pid_kd = 116.939
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 51.188
#*# pid_ki = 2.752
#*# pid_kd = 238.022
